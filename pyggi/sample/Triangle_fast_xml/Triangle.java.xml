<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit><line>public class Triangle {
</line><line>
</line><line>    public enum TriangleType {
</line><line>        INVALID, SCALENE, EQUALATERAL, ISOCELES
</line><line>    }
</line><line>
</line><line>    public static TriangleType classifyTriangle(int a, int b, int c) {
</line><line>
</line><line>        delay();
</line><line>
</line><line>        // Sort the sides so that a &lt;= b &lt;= c
</line><line>        if (a &gt; b) {
</line><line>            int tmp = a;
</line><line>            a = b;
</line><line>            b = tmp;
</line><line>        }
</line><line>
</line><line>        if (a &gt; c) {
</line><line>            int tmp = a;
</line><line>            a = c;
</line><line>            c = tmp;
</line><line>        }
</line><line>
</line><line>        if (b &gt; c) {
</line><line>            int tmp = b;
</line><line>            b = c;
</line><line>            c = tmp;
</line><line>        }
</line><line>
</line><line>        if (a + b &lt;= c) {
</line><line>            return TriangleType.INVALID;
</line><line>        } else if (a == b &amp;&amp; b == c) {
</line><line>            return TriangleType.EQUALATERAL;
</line><line>        } else if (a == b || b == c) {
</line><line>            return TriangleType.ISOCELES;
</line><line>        } else {
</line><line>            return TriangleType.SCALENE;
</line><line>        }
</line><line>
</line><line>    }
</line><line>
</line><line>    private static void delay() {
</line><line>        try {
</line><line>            Thread.sleep(50);
</line><line>        } catch (InterruptedException e) {
</line><line>            // do nothing
</line><line>        }
</line><line>    }
</line><line>
</line><line>}
</line></unit>
